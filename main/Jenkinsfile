pipeline {
    agent{
        label 'portal-ft'
    }
    triggers{ cron('H H/12 * * *') }
    environment {
    SERVICE="athena"
    ROOT_TEST_DIR="$WORKSPACE/jenkins"
  }
    parameters {
            choice(
                name: 'CSP_HOST',
                choices: ['stage','1','2','3','4','5','6'],
                description: "Choose Host CSP!")
    }

   stages {
        stage('Install dependencies ') {
            steps {
                checkout scm
                echo 'Installing pip packages.......'
                sh 'cd $WORKSPACE'
                sh 'sudo pip install --ignore-installed -r $WORKSPACE/athena_qa-master/main/requirements.txt'
                sh 'cd ${ROOT_TEST_DIR}'
            }
        }
        stage('identity'){
            steps {
          catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE') {
              echo "Running : ${f} with ${CSP_HOST}"
              echo "------------------------------------------------------------------------"
              echo " [START] Execute UI TEST scripts for SERVICE::${f}"
              echo "------------------------------------------------------------------------"
              sh 'cd ${ROOT_TEST_DIR}'
              sh 'pytest $WORKSPACE/main/tests/athena/bvt/identity -m "smoke and identity" --env=${CSP_HOST}'
        }
        }
        }
        stage('hostapp'){
            steps {
          catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE') {
              echo "Running : ${f} with ${CSP_HOST}"
              echo "------------------------------------------------------------------------"
              echo " [START] Execute UI TEST scripts for SERVICE::${f}"
              echo "------------------------------------------------------------------------"
              sh 'cd ${ROOT_TEST_DIR}'
              sh 'pytest $WORKSPACE/main/tests/athena/bvt/hostapp -m "smoke and identity" --env=${CSP_HOST}'
        }
        }
        }
        stage('entitelement'){
            steps {
          catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE') {
              echo "Running : ${f} with ${CSP_HOST}"
              echo "------------------------------------------------------------------------"
              echo " [START] Execute UI TEST scripts for SERVICE::${f}"
              echo "------------------------------------------------------------------------"
              sh 'cd ${ROOT_TEST_DIR}'
              sh 'pytest $WORKSPACE/main/tests/athena/bvt/identity -m "smoke and identity" --env=${CSP_HOST}'
        }
        }
        }
        stage('news'){
            steps {
          catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE') {
              echo "Running : ${f} with ${CSP_HOST}"
              echo "------------------------------------------------------------------------"
              echo " [START] Execute UI TEST scripts for SERVICE::${f}"
              echo "------------------------------------------------------------------------"
              sh 'cd ${ROOT_TEST_DIR}'
              sh 'pytest $WORKSPACE/main/tests/athena/bvt/news -m "smoke and identity" --env=${CSP_HOST}'
        }
        }
        }

   }
}
